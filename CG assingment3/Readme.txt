사용한 텍스쳐는 
기존 main_texturemapping4.cpp에서 사용했던 cloud와 earth_basic 에다가
밤에 빛나는 텍스쳐를 표현한 5_night_8k, 
각 나라들의 국경을 표현한 boundaries_16k, 
그리고 지형을 표현한 ele_bump_16k를 이용하였습니다.

그리고 처음에 shadingcube 또는 shadingbunny에서 사용했던 lighting 기능을 끌고와서 사용하였더니 광원이 지구본과 같이 돌아가는 현상이 발생하여 shader를 수정하였고 이를 통해 광원의 위치를 고정하였습니다.

프로그램 사용법은 기존과 같이 마우스 좌클릭과 우클릭으로 사용하면 되며


버그 사항은 하기와 같습니다.

 5_night_8k, boundaries_16k,  ele_bump_16k 텍스쳐를 적용한 상태에서 광원을 고정하여 광원을 받지 않는 지구의 표면은 어둡게 하도록 하였더니 빛을 받지 않는 지구의 표면은 엄청 붉게 표현되었습니다.

이를 해결하기 위해 shader를 다시 수정하여 각 텍스쳐의 color 표현 정도를 조절하여 붉음의 정도를 줄일 수 있었으며

5_night_8k의 경우에는 GL_RGB를 적용함에 문제가 없었지만

boundaries_16k,  ele_bump_16k텍스쳐의 경우에는  GL_RED를 GL_RBG나 GL_RGBA로 했을 경우 예외 처리가 발생하며 프로그램이 실행되지 않았고

boundaries가 빛을 받지 않는 어두운 표면에서만 붉게 보이길래 이를 다른 색으로 표현해보고자 GL_GREEN과 GL_BLUE를 적용해봤는데 프로그램 예외 처리가 발생하진 않았지만 국경의 표현이 보이지 않았습니다.

그리고 지형을 표현한 ele_bump_16k텍스쳐의 경우에는 shader에서 색상 정도를 높게 설정하면 지구본이 전체적으로 붉게 표현되어 텍스처가 적용된 것 같긴한데 실질적으로 육안으로는 차이를 모르겠어서 잘 적용된 것인지 잘 모르겠습니다.